{"remainingRequest":"D:\\开发目录\\test-main\\vue-project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\开发目录\\test-main\\vue-project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\开发目录\\test-main\\vue-project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\开发目录\\test-main\\vue-project\\src\\components\\signpage.vue?vue&type=template&id=5263c048&scoped=true&","dependencies":[{"path":"D:\\开发目录\\test-main\\vue-project\\src\\components\\signpage.vue","mtime":1688198330831},{"path":"D:\\开发目录\\test-main\\vue-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\开发目录\\test-main\\vue-project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\开发目录\\test-main\\vue-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\开发目录\\test-main\\vue-project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"sign\" },\n    [\n      _c(\"van-nav-bar\", {\n        attrs: { title: \"登陆\", \"left-arrow\": \"\" },\n        on: { \"click-left\": _vm.onClickLeft },\n      }),\n      _c(\n        \"van-cell-group\",\n        [\n          _c(\"van-field\", {\n            attrs: {\n              clearable: \"\",\n              label: \"账号\",\n              placeholder: \"请输入账号\",\n              autocomplete: \"off\",\n            },\n            model: {\n              value: _vm.account,\n              callback: function ($$v) {\n                _vm.account = $$v\n              },\n              expression: \"account\",\n            },\n          }),\n          _c(\"van-field\", {\n            attrs: {\n              type: \"password\",\n              label: \"密码\",\n              placeholder: \"请输入密码\",\n              autocomplete: \"off\",\n            },\n            model: {\n              value: _vm.password,\n              callback: function ($$v) {\n                _vm.password = $$v\n              },\n              expression: \"password\",\n            },\n          }),\n          _c(\"van-field\", {\n            attrs: {\n              clearable: \"\",\n              label: \"验证码\",\n              placeholder: \"请输入验证码\",\n              autocomplete: \"off\",\n            },\n            model: {\n              value: _vm.Indonesia,\n              callback: function ($$v) {\n                _vm.Indonesia = $$v\n              },\n              expression: \"Indonesia\",\n            },\n          }),\n          _c(\"img\", {\n            attrs: {\n              id: \"Verification\",\n              src: _vm.Verification,\n              alt: \"Base64 Image\",\n            },\n            on: { click: _vm.randomNum },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"van-button\",\n        {\n          attrs: { type: \"info\", size: \"large\" },\n          on: {\n            click: function ($event) {\n              return _vm.sign1()\n            },\n          },\n        },\n        [_vm._v(\"登陆\")]\n      ),\n      _vm._m(0),\n      _c(\n        \"van-divider\",\n        {\n          style: {\n            color: \"#aaa\",\n            borderColor: \"#aaa\",\n            padding: \"0 16px\",\n            marginTop: \"6rem\",\n          },\n        },\n        [_vm._v(\"其他平台登陆\")]\n      ),\n      _c(\"div\", [\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.message,\n              expression: \"message\",\n            },\n          ],\n          attrs: { type: \"text\" },\n          domProps: { value: _vm.message },\n          on: {\n            input: function ($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.message = $event.target.value\n            },\n          },\n        }),\n        _c(\"button\", { on: { click: _vm.sendMessage } }, [_vm._v(\"发送\")]),\n        _c(\"p\", [_vm._v(\"接收到的消息：\" + _vm._s(_vm.receivedMessage))]),\n      ]),\n      _c(\n        \"van-popup\",\n        {\n          model: {\n            value: _vm.show,\n            callback: function ($$v) {\n              _vm.show = $$v\n            },\n            expression: \"show\",\n          },\n        },\n        [\n          _c(\n            \"p\",\n            {\n              class: {\n                mess: true,\n              },\n              style: _vm.messStyle,\n            },\n            [_vm._v(_vm._s(_vm.mess))]\n          ),\n        ]\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"messageof\" }, [\n      _c(\"a\", { staticClass: \"register\", attrs: { href: \"#/register\" } }, [\n        _vm._v(\"快速注册\"),\n      ]),\n      _c(\"a\", { staticStyle: { color: \"#aaa\" }, attrs: { href: \"\" } }, [\n        _vm._v(\"找回密码\"),\n      ]),\n    ])\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}